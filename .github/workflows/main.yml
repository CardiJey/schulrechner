name: Build Cordova APK

on:
  push:
    tags:
      - 'v*'  # This will trigger the workflow for any version tag like v1.0.0, v2.1.3, etc.
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Ensures full history is fetched
          fetch-tags: true

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22

      - name: Generate Sources
        run: |
          pipx install --force git+https://github.com/flatpak/flatpak-builder-tools.git#subdirectory=node
          flatpak-node-generator npm package-lock.json

      - name: Upload generated-sources.json
        uses: actions/upload-artifact@v4
        with:
          name: generated-sources
          path: generated-sources.json

      - name: Install dependencies
        run: |
          npm install

      - name: Build and move math.js bundle
        run: |
          git submodule update --init --recursive
          cd mathjs
          npm install
          npm run build
          cd ..
          mv mathjs/lib/browser/math.js www/js/math.js

      - name: Update XML Version and Copy Fastlane Changelog
        run: npm run update_version

      - name: Extract Changelog
        run: git log --pretty=format:"- %s" > www/changelog/commit_messages.txt

      # === Android Cordova Build ===

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Cordova
        run: npm install -g cordova

      - name: Prepare Android Gradle project
        run: |
          cordova platform add android

      - name: Build Cordova project
        run: |
          cordova build android --release "--" --packageType=apk

      - name: Decode Keystore from secret
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > schulrechner.jks

      - name: Find latest Build Tools version
        id: buildtools
        run: |
          LATEST=$(ls -v "$ANDROID_HOME/build-tools" | tail -n 1)
          echo "version=$LATEST" >> $GITHUB_OUTPUT

      - name: Sign the APK with apksigner
        run: |
          BUILD_TOOLS_VERSION=${{ steps.buildtools.outputs.version }}
      
          $ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/zipalign -v 4 \
            platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
            platforms/android/app/build/outputs/apk/release/app-release-aligned.apk
      
          $ANDROID_HOME/build-tools/$BUILD_TOOLS_VERSION/apksigner sign \
            --ks schulrechner.jks \
            --ks-key-alias ${{ secrets.KEY_ALIAS }} \
            --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
            --key-pass pass:${{ secrets.KEY_PASSWORD }} \
            --out platforms/android/app/build/outputs/apk/release/app-release.apk \
            platforms/android/app/build/outputs/apk/release/app-release-aligned.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: schulrechner-apk
          path: platforms/android/app/build/outputs/apk/release/app-release.apk

      - name: Upload Release Assets
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.flatpak
            platforms/android/app/build/outputs/apk/release/app-release.apk
            generated-sources.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Browser Gradle project
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          cordova platform add browser

      - name: Build Cordova Browser project
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          cordova build browser --release

      - name: Push Browser Files to browser-release branch
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          BROWSER_BRANCH="browser-release"
          TAG_NAME="${GITHUB_REF##*/}"

          # Clone with access token for pushing
          git clone --depth=1 --single-branch --branch $BROWSER_BRANCH https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} temp-browser
          cd temp-browser

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Remove all contents from brwoser branch
          git rm -rf . --ignore-unmatch

          # Copy unbuilt Android project
          cp -r ../platforms/browser/* .

          # Copy browser redirection file
          cp ../other/browser_redirection.html index.html

          git add .
          git commit -m "Browser release of ${TAG_NAME}" || echo "No changes to commit"
          
          # Push to branch and tag
          git push origin $GRADLE_BRANCH
